name: Release Build

on:
  push:
    tags:
      - 'v*.*.*'  # 语义化版本标签触发

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-13, windows-2022]
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
        include:
          - os: ubuntu-22.04
            goos: linux
            suffix: ""
            archive: tar.gz
          - os: macos-13
            goos: darwin
            suffix: ""
            archive: tar.gz
          - os: windows-2022
            goos: windows
            suffix: ".exe"
            archive: zip
        exclude:  # 排除无效组合
          - os: windows-2022
            goarch: arm64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'
        check-latest: true

    - name: Extract version
      id: version
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
        else
          echo "VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        fi

    - name: Build binary
      env:
        CGO_ENABLED: 0
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        mkdir -p bin
        output="wen-ai-cli${{ matrix.suffix}}"
        go build -ldflags "-s -w -X wen-ai-cli/setup.CliVersion=${{ env.VERSION }}" \
          --trimpath \
          -o bin/$output \
          ./main.go

    - name: Package artifacts
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        cd bin
        output="wen-ai-cli${{ matrix.suffix}}"
        artifact_name="wen-ai-cli_${VERSION}_${GOOS}_${GOARCH}"
        if [ ! -f "$output" ]; then
          echo "Error: Binary file $output not found!"
          exit 1
        fi
        case ${{ matrix.archive }} in
          tar.gz)
            tar -czvf ../${artifact_name}.tar.gz $output
            ;;
          zip)
            zip -r ../${artifact_name}.zip $output
            ;;
        esac
        # 列出当前目录下的文件，用于调试
        ls -la
        # 列出上级目录下的文件，用于调试
        ls -la ..

    - name: Upload release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          wen-ai-cli_${VERSION}_*.tar.gz
          wen-ai-cli_${VERSION}_*.zip
        body: "Prebuilt binaries for ${{ env.VERSION }}"
